'.source.js, .source.jsx, .source.ts, .source.tsx':

  'import React':
    prefix: 'imr'
    body: """
      import React from 'react';
    """

  'import ReactDom':
    prefix: 'imrd'
    body: """
      import ReactDom from 'react-dom';
    """

  "import PropTypes":
    prefix: "impt"
    body: """
      import PropTypes from 'prop-types';
    """

  'import React, { Component }':
    prefix: 'imrc'
    body: """
      import React, { Component } from 'react';
    """

  "import React and PropTypes":
    prefix: "imrp"
    body: """
      import React from 'react';
      import PropTypes from 'prop-types';
    """

  'import React, { Component } and PropTypes':
    prefix: 'imrcp'
    body: """
      import React, { Component } from 'react';
      import PropTypes from 'prop-types';
    """

  'React: this.props':
    prefix: 'props'
    body: """
      this.props${1}
    """

  'React: this.state':
    prefix: 'state'
    body: """
      this.state${1}
    """

  'React: setState (object)':
    prefix: 'rss'
    body: """
      this.setState({${1}});
    """

  'React: setState (function)':
    prefix: 'rssf'
    body: """
      this.setState((prevState, props) => {
        return {${1}};
      });
    """

  'React: setState (optional callback)':
    prefix: 'rssfc'
    body: """
      this.setState(
        (prevState, props) => ({${1}}),
        ${2}
      );
    """

  'React: Component':
    prefix: 'rc'
    body: """
      import React from 'react';

      class $1 extends React.Component {
        static propTypes = {};
        static defaultProps = {};

        render() {
          return (
            <div>
              <h1>$1 Component</h1>
            </div>
          );
        }
      }

      export default ${1};
    """

  'React: Stateless Component':
    prefix: 'rsc'
    body: """
      import React from 'react';
      import PropTypes from 'prop-types';

      const propTypes = {}

      const defaultProps = {}

      const ${1} = (props) => {
        return(<div>${1}</div>)
      };

      ${1}.propTypes = propTypes
      ${1}.defaultProps = defaultProps

      export default ${1};
    """

  'React: Constructor':
    prefix: 'rcon'
    body: """
      constructor(props) {
        super(props);
        this.state = {$1};
      }
    """

  'React: render':
    prefix: 'ren'
    body: """
      render() {
        return (
          <div></div>
        );
      }
    """

  'React: Children map':
    prefix: 'rcm'
    body: """
      React.Children.map(this.props.children, (child, i) => {
        return ${1};
      })
    """

  'React: Children forEach':
    prefix: 'rcfe'
    body: """
      React.Children.forEach(this.props.children, (child, i) => {
        ${1}
      })
    """

  'React: Children count':
    prefix: 'rcc'
    body: """
      React.Children.count(this.props.children);
    """

  'React: Children only':
    prefix: 'rco'
    body: """
      React.Children.only(this.props.children);
    """

  'React: Children toArray':
    prefix: 'rcta'
    body: """
      React.Children.toArray(this.props.children)
    """
